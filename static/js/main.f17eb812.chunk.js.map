{"version":3,"sources":["errors.js","bcs/bcsApi.js","bcs/bcsService.js","bcs/index.js","Dashboard.js","Login.js","PrivateRoute.js","TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["NetworkError","message","code","Error","postJSON","endpoint","body","a","headers","fetch","method","JSON","stringify","res","ok","statusText","status","json","getJSON","login","bcsCredentials","me","authToken","sessions","enrollmentId","sessionDetail","sessionId","bcsDbKey","key","db","val","idb","keys","bcsKeyRe","RegExp","delManyPromise","filter","test","map","Promise","all","length","token","email","password","bcsApi","errorCode","authenticationInfo","result","error","cohorts","enrollments","Enrollments","enrollment","id","course","name","startDate","endDate","courseId","students","cohortId","parseInt","academicSessions","calendarSessions","session","context","contextCode","sessionDetails","studentAttendance","Map","forEach","sessDetails","stuDetails","student","get","pick","attendance","totalAbsent","excusedAbsent","set","absent","absence","startTime","excused","push","console","log","bcsContext","createContext","isLoggedIn","pending","signOut","BcsProvider","children","useState","state","setState","useEffect","bcsService","then","prevState","loginError","Provider","value","useBcs","useContext","useAsyncRequestor","requestor","isLoaded","load","Cohorts","to","className","Overview","useParams","StudentTable","Array","from","values","scope","StudentTableRow","firstName","lastName","trClassName","MAX_ABSENCES","Dashboard","path","exact","rememberEmail","Heading","FormControl","label","controlId","inputProps","htmlFor","RememberMeControl","type","Alert","show","style","maxHeight","transition","overflow","height","role","SubmitButton","btnProps","ButtonSpinner","aria-hidden","Login","history","useHistory","location","useLocation","remember","dirty","formState","setFormState","pathname","replace","handleInputChange","e","target","checked","handleSubmit","preventDefault","trim","maxWidth","onSubmit","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","onChange","disabled","borderTopRightRadius","borderTopLeftRadius","isFormValid","PrivateRoute","rest","render","TopBar","onClick","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f17eb812.chunk.js","sourcesContent":["export class NetworkError extends Error {\n  constructor({ message, code }) {\n    super(message);\n    this.code = code;\n  }\n}\n","import { NetworkError } from \"../errors\";\n\nconst postJSON = async (endpoint, body, headers = {}) => {\n  const res = await fetch(\n    `https://www.bootcampspot.com/api/instructor/v1${endpoint}`,\n    {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...headers,\n      },\n      body: JSON.stringify(body),\n    }\n  );\n  if (!res.ok) {\n    throw new NetworkError({ message: res.statusText, code: res.status });\n  }\n  return res.json();\n};\n\nconst getJSON = async (endpoint, headers = {}) => {\n  const res = await fetch(\"https://www.bootcampspot.com/api/instructor/v1/me\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n  });\n  if (!res.ok) {\n    throw new NetworkError({ message: res.statusText, code: res.statusText });\n  }\n  return res.json();\n};\n\nexport const login = async (bcsCredentials) =>\n  postJSON(\"/login\", bcsCredentials);\n\nexport const me = ({ authToken }) => getJSON(\"/me\", { authToken });\n\nexport const sessions = ({ authToken, enrollmentId }) =>\n  postJSON(\"/sessions\", { enrollmentId }, { authToken });\n\nexport const sessionDetail = ({ authToken, sessionId }) =>\n  postJSON(\"/sessionDetail\", { sessionId }, { authToken });\n","import * as idb from \"idb-keyval\";\nimport * as bcsApi from \"./bcsApi\";\nimport pick from \"lodash/pick\";\n\nconst BCS_DB_NAMESPACE = \"bcs\";\nconst bcsDbKey = (key) => `${BCS_DB_NAMESPACE}:${key}`;\n\nconst db = {\n  set(key, val) {\n    return idb.set(bcsDbKey(key), val);\n  },\n  get(key) {\n    return idb.get(bcsDbKey(key));\n  },\n  del(key) {\n    return idb.del(bcsDbKey(key));\n  },\n  async clear() {\n    const keys = await idb.keys();\n    if (!keys) return 0;\n    const bcsKeyRe = new RegExp(`^${BCS_DB_NAMESPACE}:`);\n    const delManyPromise = keys\n      .filter((key) => bcsKeyRe.test(key))\n      .map((key) => idb.del(key));\n    await Promise.all(delManyPromise);\n    return delManyPromise.length;\n  },\n};\n\nexport const token = () => db.get(\"token\");\n\nexport const signOut = () => db.clear();\n\nexport const login = async ({ email, password }) => {\n  try {\n    const { errorCode, authenticationInfo } = await bcsApi.login({\n      email,\n      password,\n    });\n    if (errorCode) {\n      throw new Error(errorCode);\n    }\n    await db.set(\"token\", authenticationInfo.authToken);\n    return { result: true };\n  } catch (error) {\n    await db.del(\"token\");\n    return { error };\n  }\n};\n\nexport const cohorts = async () => {\n  try {\n    const authToken = await token();\n    if (!authToken) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n    let result = await db.get(\"cohorts\");\n    if (result) {\n      return { result };\n    }\n    const { Enrollments: enrollments } = await bcsApi.me({ authToken });\n    if (!enrollments) {\n      throw new Error(\"You don't have any cohorts.\");\n    }\n    result = enrollments.map((enrollment) => {\n      const enrollmentId = enrollment.id;\n      const { name, startDate, endDate, id: courseId } = enrollment.course;\n      return { name, startDate, endDate, courseId, enrollmentId };\n    });\n    db.set(\"cohorts\", result);\n    return { result };\n  } catch (error) {\n    return { error };\n  }\n};\n\nexport const students = async ({ cohortId }) => {\n  try {\n    const authToken = await token();\n    if (!authToken) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n    let result = await db.get(`students:${cohortId}`);\n    if (result) {\n      return { result };\n    }\n    const sessions = await bcsApi.sessions({\n      authToken,\n      enrollmentId: parseInt(cohortId),\n    });\n    const academicSessions = sessions.calendarSessions\n      .filter((session) => session.context.contextCode === \"academic\")\n      .map((session) => session.session.id);\n\n    const sessionDetails = await Promise.all(\n      academicSessions.map((sessionId) =>\n        bcsApi.sessionDetail({ authToken, sessionId })\n      )\n    );\n    const studentAttendance = new Map();\n    sessionDetails.forEach((sessDetails) => {\n      sessDetails.students.forEach((stuDetails) => {\n        const key = stuDetails.student.id;\n        let student = studentAttendance.get(key);\n        if (!student) {\n          student = pick(stuDetails.student, [\n            \"id\",\n            \"email\",\n            \"firstName\",\n            \"lastName\",\n            \"active\",\n          ]);\n          student.attendance = [];\n          student.totalAbsent = 0;\n          student.excusedAbsent = 0;\n          studentAttendance.set(key, student);\n        }\n\n        const attendance = {\n          absent: !!stuDetails.absence,\n          startTime: sessDetails.session.session.startTime,\n          excused: stuDetails.absence?.excused || false,\n        };\n        if (attendance.absent && attendance.excused) {\n          student.excusedAbsent += 1;\n        }\n        if (attendance.absent) {\n          student.totalAbsent += 1;\n        }\n\n        student.attendance.push(attendance);\n      });\n    });\n    await db.set(`students:${cohortId}`, studentAttendance);\n    console.log({ studentAttendance });\n    return { result: studentAttendance };\n  } catch (error) {\n    return { error };\n  }\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport * as bcsService from \"./bcsService\";\n\nconst bcsContext = createContext({\n  isLoggedIn: false,\n  pending: false,\n  signOut: () => {},\n  login: ({ email, password }) => {},\n  cohorts: () => {},\n});\n\nexport function BcsProvider({ children }) {\n  const [state, setState] = useState({\n    error: \"\",\n    pending: true,\n    isLoggedIn: false,\n  });\n\n  useEffect(() => {\n    bcsService.token().then((val) =>\n      setState((prevState) => ({\n        ...prevState,\n        isLoggedIn: !!val,\n        pending: false,\n      }))\n    );\n  }, []);\n\n  const signOut = async () => {\n    try {\n      await bcsService.signOut();\n      setState((prevState) => ({ ...prevState, isLoggedIn: false }));\n    } catch (error) {\n      console.error(error);\n      setState((prevState) => ({\n        ...prevState,\n        error: \"Unable to log out. Please try again.\",\n      }));\n    }\n  };\n\n  const loginError = (error) => {\n    return setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: false,\n      error,\n    }));\n  };\n\n  const login = async ({ email, password }) => {\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { error } = await bcsService.login({ email, password });\n    if (error?.message === \"INVALID_CREDENTIALS\") {\n      return loginError(\"Invalid username or password\");\n    }\n    if (error) {\n      return loginError(\"An unexpected error occurred. Please try again.\");\n    }\n    setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: true,\n      error: \"\",\n    }));\n  };\n\n  return (\n    <bcsContext.Provider value={{ ...state, login, signOut }}>\n      {children}\n    </bcsContext.Provider>\n  );\n}\n\nexport const useBcs = () => useContext(bcsContext);\n\nconst useAsyncRequestor = (requestor) => {\n  const [state, setState] = useState({\n    pending: false,\n    result: null,\n    error: null,\n    isLoaded: false,\n  });\n  const load = async () => {\n    if (state.isLoaded || state.pending) return;\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { result, error } = await requestor();\n    setState({ result, error, pending: false, isLoaded: true });\n  };\n  return { ...state, load };\n};\n\nexport const useCohorts = () => useAsyncRequestor(bcsService.cohorts);\n\nexport const useStudents = (cohortId) =>\n  useAsyncRequestor(() => bcsService.students({ cohortId }));\n","import { useEffect } from \"react\";\nimport { Switch, Route, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useCohorts, useStudents } from \"./bcs\";\n\nconst MAX_ABSENCES = 5;\n\nfunction Dashboard() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route path=\"/:enrollmentId\">\n          <Overview />\n        </Route>\n        <Route exact path=\"/\">\n          <Cohorts />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Cohorts() {\n  const cohorts = useCohorts();\n  useEffect(() => {\n    cohorts.load();\n  }, [cohorts]);\n\n  if (cohorts.pending || !cohorts.isLoaded) {\n    return <div>Loading cohorts...</div>;\n  }\n  if (cohorts.error) {\n    return <div>Error loading cohorts. {cohorts.error}</div>;\n  }\n  return (\n    <>\n      <h1>Please choose a cohort</h1>\n      {cohorts.result.map(({ name, enrollmentId }) => (\n        <Link\n          key={enrollmentId}\n          to={`/${enrollmentId}`}\n          className=\"btn btn-outline-secondary\"\n        >\n          {name}\n        </Link>\n      ))}{\" \"}\n    </>\n  );\n}\n\nfunction Overview() {\n  const { enrollmentId } = useParams();\n  const students = useStudents(enrollmentId);\n  useEffect(() => {\n    students.load();\n  }, [students]);\n  if (students.error) {\n    return <p>{students.error}</p>;\n  }\n  if (students.pending || !students.isLoaded) {\n    return <p>Loading students...</p>;\n  }\n  return <StudentTable students={Array.from(students.result.values())} />;\n}\n\nfunction StudentTable({ students }) {\n  console.log(students);\n  return (\n    <table className=\"table table-striped mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">First</th>\n          <th scope=\"col\">Last</th>\n          <th scope=\"col\">Absent</th>\n        </tr>\n      </thead>\n      <tbody>\n        {students.map((student) => (\n          <StudentTableRow key={student.id} student={student} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction StudentTableRow({ student }) {\n  const { firstName, lastName, totalAbsent } = student;\n  let trClassName = \"\";\n  if (totalAbsent > MAX_ABSENCES) {\n    trClassName = \"table-danger\";\n  } else if (totalAbsent > MAX_ABSENCES - 1) {\n    trClassName = \"table-warning\";\n  }\n  return (\n    <tr className={trClassName}>\n      <td>{firstName}</td>\n      <td>{lastName}</td>\n      <td>{totalAbsent}</td>\n    </tr>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport * as idb from \"idb-keyval\";\nimport { useBcs } from \"./bcs\";\n\nconst rememberEmail = (email) => idb.set(\"login:email\", email);\nconst clearEmail = () => idb.del(\"login:email\");\nconst getEmail = () => idb.get(\"login:email\");\n\n// Based on https://reactrouter.com/web/example/auth-workflow. The login form\n// will redirect back to the page the use tried to access after a successful\n// login. Falls back to \"/\" if there is no history yet.\nfunction Login() {\n  const history = useHistory();\n  const location = useLocation();\n  const { login, isLoggedIn, pending, error } = useBcs();\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    remember: false,\n    dirty: false,\n  });\n\n  // Redirect if the user is logged in.\n  useEffect(() => {\n    if (isLoggedIn) {\n      // Get path the user came from (see ProtectedRoute). Fallback to \"/\"\n      const from = { pathname: location.state?.from?.pathname || \"/\" };\n      history.replace(from);\n    }\n  }, [isLoggedIn, history, location]);\n\n  // initialize email from storage\n  useEffect(() => {\n    getEmail().then((email) =>\n      setFormState((prevState) => ({\n        ...prevState,\n        remember: !!email,\n        email: email || \"\",\n      }))\n    );\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormState((prevState) => ({\n      ...prevState,\n      dirty: true,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  const isFormValid = () => {\n    const { email, password, dirty } = formState;\n    return email.trim() && password.trim() && dirty;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password, remember } = formState;\n    const bcsCredentials = {\n      email: email.trim(),\n      password: password.trim(),\n    };\n    setFormState((prevState) => ({ ...prevState, dirty: false }));\n    if (remember) {\n      await rememberEmail(bcsCredentials.email);\n    } else {\n      await clearEmail();\n    }\n    login(bcsCredentials);\n  };\n\n  return (\n    <main style={{ maxWidth: 330 }} className=\"w-100 py-5 mx-auto\">\n      <form onSubmit={handleSubmit}>\n        <Heading />\n        <FormControl\n          label=\"Email address\"\n          type=\"email\"\n          controlId=\"email\"\n          style={{\n            marginBottom: -1,\n            borderBottomRightRadius: 0,\n            borderBottomLeftRadius: 0,\n          }}\n          value={formState.email}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <FormControl\n          label=\"Password\"\n          type=\"password\"\n          controlId=\"password\"\n          style={{\n            borderTopRightRadius: 0,\n            borderTopLeftRadius: 0,\n          }}\n          value={formState.password}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <RememberMeControl\n          controlId=\"remember\"\n          checked={formState.remember}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <SubmitButton disabled={!isFormValid() || pending} pending={pending} />\n        <Alert show={error && !formState.dirty}>{error}</Alert>\n      </form>\n    </main>\n  );\n}\n\nfunction Heading() {\n  return (\n    <h1 className=\"h5 mb-3 fw-normal\">\n      Please sign in with your BCS Credentials\n    </h1>\n  );\n}\n\nfunction FormControl({ label, controlId, ...inputProps }) {\n  return (\n    <div className=\"form-floating\">\n      <input\n        name={controlId}\n        id={controlId}\n        className=\"form-control\"\n        {...inputProps}\n      />\n      <label htmlFor={controlId}>{label}</label>\n    </div>\n  );\n}\n\nfunction RememberMeControl({ controlId, ...inputProps }) {\n  return (\n    <div className=\"my-3 text-center\">\n      <label>\n        <input name={controlId} type=\"checkbox\" {...inputProps} /> Remember me\n      </label>\n    </div>\n  );\n}\n\n// Alert uses css transition to grow/shrink on Y axis.\nfunction Alert({ children, show }) {\n  return (\n    <div\n      className=\"mt-3\"\n      style={{\n        maxHeight: show ? 100 : 0,\n        transition: `max-height ease 400ms`,\n        overflow: \"hidden\",\n        height: \"auto\",\n      }}\n    >\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction SubmitButton({ pending, ...btnProps }) {\n  return (\n    <button\n      type=\"submit\"\n      className=\"w-100 btn btn-lg btn-primary\"\n      {...btnProps}\n    >\n      {pending ? <ButtonSpinner>Loading...</ButtonSpinner> : \"Submit\"}\n    </button>\n  );\n}\n\nfunction ButtonSpinner({ children }) {\n  return (\n    <>\n      <span\n        className=\"spinner-border spinner-border-sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n      <span className=\"visually-hidden\">{children}</span>\n    </>\n  );\n}\n\nexport default Login;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useBcs } from \"./bcs\";\nfunction PrivateRoute({ children, ...rest }) {\n  const { isLoggedIn } = useBcs();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { Link } from \"react-router-dom\";\nimport { useBcs } from \"./bcs\";\n\nfunction TopBar() {\n  const { isLoggedIn, signOut } = useBcs();\n  return (\n    <header className=\"navbar navbar-dark bg-dark shadow\">\n      <Link className=\"navbar-brand px-3 col-sm-3\" to=\"/\">\n        Instructor Dashboard\n      </Link>\n      <div className=\"navbar-nav px-3\">\n        <div className=\"nav-item\">\n          {isLoggedIn && (\n            <button className=\"nav-link bg-dark btn\" onClick={signOut}>\n              Sign out\n            </button>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default TopBar;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BcsProvider } from \"./bcs\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport TopBar from \"./TopBar\";\n\nfunction App() {\n  return (\n    <BcsProvider>\n      <Router\n        basename={\n          process.env.NODE_ENV === \"production\" ? \"/instructor-dashboard\" : \"/\"\n        }\n      >\n        <TopBar />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Dashboard />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </BcsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}