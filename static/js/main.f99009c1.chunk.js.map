{"version":3,"sources":["errors.js","bcs/bcsApi.js","bcs/bcsService.js","bcs/index.js","util/arrayUtil.js","util/classNames.js","Dashboard/OffCanvas.js","Dashboard/Overview.js","Dashboard/Cohorts.js","Dashboard/Dashboard.js","Dashboard/index.js","Login.js","PrivateRoute.js","TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["NetworkError","message","code","Error","postJSON","endpoint","body","a","headers","fetch","method","JSON","stringify","res","ok","statusText","status","json","getJSON","console","log","login","bcsCredentials","me","authToken","sessions","enrollmentId","sessionDetail","sessionId","assignments","assignmentDetail","assignmentId","bcsDbKey","key","db","val","idb","keys","bcsKeyRe","RegExp","delManyPromise","filter","test","map","Promise","all","length","token","tokenExpAt","jwtDecode","minutesTimeout","creationTime","Date","parse","isLoggedIn","now","error","signOut","email","password","bcsApi","errorCode","authenticationInfo","result","cohorts","enrollments","Enrollments","enrollment","id","course","name","startDate","endDate","courseId","students","cohortId","parseInt","studentMap","Map","academicSess","calendarSessions","session","context","contextCode","forEach","sessDetails","stuDetails","student","get","pick","attendance","totalAbsent","excusedAbsent","grades","set","absent","absence","startTime","excused","push","requiredAssignmentIds","calendarAssignments","assignment","required","assDetail","type","title","letterGrade","grade","submission","mark","bcsContext","createContext","pending","BcsProvider","children","useState","state","setState","useEffect","bcsService","then","prevState","clearTimeout","timerId","loginError","Provider","value","useBcs","useContext","useAsyncRequestor","requestor","isLoaded","load","compactArray","arr","classNamesFromArray","join","Header","onClose","className","CloseButton","Body","aria-label","onClick","OffCanvas","show","style","modalClassName","tabIndex","aria-labelledby","visibility","DashboardHelp","StudentDetails","AbsencesSection","HomeworkIssuesSection","absentSess","sess","formatDate","listItems","effectiveDueDate","HomeworkIssueItem","statusColor","badgeClassName","minWidth","StudentTable","onSelectStudent","onHelp","maxWidth","verticalAlign","padding","cursor","scope","StudentTableRow","firstName","lastName","totalIncomplete","totalNotSubmitted","totalUngraded","totalMissedHW","totalGrades","trClassName","MAX_ABSENCES","Overview","useParams","offCanvasState","setOffCanvasState","Array","from","values","Cohorts","to","Dashboard","path","rememberEmail","Heading","FormControl","label","controlId","inputProps","htmlFor","RememberMeControl","Alert","maxHeight","transition","overflow","height","role","SubmitButton","btnProps","ButtonSpinner","aria-hidden","Login","history","useHistory","location","useLocation","remember","dirty","formState","setFormState","pathname","replace","handleInputChange","e","target","checked","handleSubmit","preventDefault","trim","onSubmit","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","onChange","disabled","borderTopRightRadius","borderTopLeftRadius","isFormValid","PrivateRoute","rest","render","TopBar","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f99009c1.chunk.js","sourcesContent":["export class NetworkError extends Error {\n  constructor({ message, code }) {\n    super(message);\n    this.code = code;\n  }\n}\n","import { NetworkError } from \"../errors\";\n\nconst postJSON = async (endpoint, body, headers = {}) => {\n  const res = await fetch(\n    `https://www.bootcampspot.com/api/instructor/v1${endpoint}`,\n    {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...headers,\n      },\n      body: JSON.stringify(body),\n    }\n  );\n  if (!res.ok) {\n    throw new NetworkError({ message: res.statusText, code: res.status });\n  }\n  return res.json();\n};\n\nconst getJSON = async (endpoint, headers = {}) => {\n  const res = await fetch(\"https://www.bootcampspot.com/api/instructor/v1/me\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n  });\n  if (!res.ok) {\n    console.log(res);\n    throw new NetworkError({\n      message: res.statusText || \"Network error\",\n      status: res.status,\n    });\n  }\n  return res.json();\n};\n\nexport const login = async (bcsCredentials) =>\n  postJSON(\"/login\", bcsCredentials);\n\nexport const me = ({ authToken }) => getJSON(\"/me\", { authToken });\n\nexport const sessions = ({ authToken, enrollmentId }) =>\n  postJSON(\"/sessions\", { enrollmentId }, { authToken });\n\nexport const sessionDetail = ({ authToken, sessionId }) =>\n  postJSON(\"/sessionDetail\", { sessionId }, { authToken });\n\nexport const assignments = ({ authToken, enrollmentId }) =>\n  postJSON(\"/assignments\", { enrollmentId }, { authToken });\n\nexport const assignmentDetail = ({ authToken, assignmentId }) =>\n  postJSON(\"/assignmentDetail\", { assignmentId }, { authToken });\n","import * as idb from \"idb-keyval\";\nimport * as bcsApi from \"./bcsApi\";\nimport pick from \"lodash/pick\";\nimport jwtDecode from \"jwt-decode\";\n\nconst BCS_DB_NAMESPACE = \"bcs\";\nconst bcsDbKey = (key) => `${BCS_DB_NAMESPACE}:${key}`;\n\nconst db = {\n  set(key, val) {\n    return idb.set(bcsDbKey(key), val);\n  },\n  get(key) {\n    return idb.get(bcsDbKey(key));\n  },\n  del(key) {\n    return idb.del(bcsDbKey(key));\n  },\n  async clear() {\n    const keys = await idb.keys();\n    if (!keys) return 0;\n    const bcsKeyRe = new RegExp(`^${BCS_DB_NAMESPACE}:`);\n    const delManyPromise = keys\n      .filter((key) => bcsKeyRe.test(key))\n      .map((key) => idb.del(key));\n    await Promise.all(delManyPromise);\n    return delManyPromise.length;\n  },\n};\n\nexport const token = () => db.get(\"token\");\n\n// Unix ts in MS of the token exp.\nexport const tokenExpAt = async () => {\n  const authToken = await token();\n  if (!authToken) {\n    return -1;\n  }\n  const { minutesTimeout, creationTime } = jwtDecode(token);\n  return minutesTimeout * 60 * 1000 + Date.parse(creationTime);\n};\n\nexport const isLoggedIn = async () => {\n  try {\n    return (await tokenExpAt()) > Date.now();\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nexport const signOut = () => db.clear();\n\nexport const login = async ({ email, password }) => {\n  try {\n    const { errorCode, authenticationInfo } = await bcsApi.login({\n      email,\n      password,\n    });\n    if (errorCode) {\n      throw new Error(errorCode);\n    }\n    await db.set(\"token\", authenticationInfo.authToken);\n    return { result: true };\n  } catch (error) {\n    await db.del(\"token\");\n    return { error };\n  }\n};\n\nexport const cohorts = async () => {\n  try {\n    const authToken = await token();\n    if (!authToken) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n    let result = await db.get(\"cohorts\");\n    if (result) {\n      return { result };\n    }\n    const { Enrollments: enrollments } = await bcsApi.me({ authToken });\n    if (!enrollments) {\n      throw new Error(\"You don't have any cohorts.\");\n    }\n    result = enrollments.map((enrollment) => {\n      const enrollmentId = enrollment.id;\n      const { name, startDate, endDate, id: courseId } = enrollment.course;\n      return { name, startDate, endDate, courseId, enrollmentId };\n    });\n    db.set(\"cohorts\", result);\n    return { result };\n  } catch (error) {\n    if (error.status === 401) {\n      error.message = \"You must login.\";\n      await signOut();\n    }\n    return { error };\n  }\n};\n\nexport const students = async ({ cohortId }) => {\n  try {\n    const authToken = await token();\n    if (!authToken) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n    let result = await db.get(`students:${cohortId}`);\n    if (result) {\n      return { result };\n    }\n    const enrollmentId = parseInt(cohortId);\n    const [sessions, assignments] = await Promise.all([\n      bcsApi.sessions({\n        authToken,\n        enrollmentId,\n      }),\n      bcsApi.assignments({\n        authToken,\n        enrollmentId,\n      }),\n    ]);\n    const studentMap = new Map();\n\n    // fetch session details for each session to compile the attendance of each student\n    const academicSess = sessions.calendarSessions\n      .filter((session) => session.context.contextCode === \"academic\")\n      .map((session) => session.session.id);\n\n    const sessionDetails = await Promise.all(\n      academicSess.map((sessionId) =>\n        bcsApi.sessionDetail({ authToken, sessionId })\n      )\n    );\n\n    // populate studentAttendance with students and attendance data.\n    sessionDetails.forEach((sessDetails) => {\n      sessDetails.students.forEach((stuDetails) => {\n        const key = stuDetails.student.id;\n        let student = studentMap.get(key);\n        if (!student) {\n          student = pick(stuDetails.student, [\n            \"id\",\n            \"email\",\n            \"firstName\",\n            \"lastName\",\n            \"active\",\n          ]);\n          student.attendance = [];\n          student.totalAbsent = 0;\n          student.excusedAbsent = 0;\n          student.grades = [];\n          studentMap.set(key, student);\n        }\n\n        const attendance = {\n          absent: !!stuDetails.absence,\n          startTime: sessDetails.session.session.startTime,\n          excused: stuDetails.absence?.excused || false,\n        };\n        if (attendance.absent && attendance.excused) {\n          student.excusedAbsent += 1;\n        }\n        if (attendance.absent) {\n          student.totalAbsent += 1;\n        }\n        student.attendance.push(attendance);\n      });\n    });\n\n    // fetch assignment details to compile homework records for each student\n    const requiredAssignmentIds = assignments.calendarAssignments\n      .filter((assignment) => assignment.required)\n      .map((assignment) => assignment.id);\n\n    const assignmentDetails = await Promise.all(\n      requiredAssignmentIds.map((assignmentId) =>\n        bcsApi.assignmentDetail({ authToken, assignmentId })\n      )\n    );\n\n    assignmentDetails.forEach((assDetail) => {\n      const assignment = pick(assDetail.assignment, [\n        \"id\",\n        \"dueDate\",\n        \"effectiveDueDate\",\n        \"title\",\n      ]);\n      assignment.type = /project/i.test(assignment.title)\n        ? \"project\"\n        : \"homework\";\n\n      assDetail.students.forEach((student) => {\n        const { id } = student.student;\n        const letterGrade = student.grade?.grade;\n        const grade = {\n          assignment,\n          status: letterGrade\n            ? \"graded\"\n            : student.submission\n            ? \"ungraded\"\n            : \"not_submitted\",\n          mark: letterGrade || \"\",\n        };\n        const studentRecord = studentMap.get(id);\n        studentRecord.grades.push(grade);\n      });\n    });\n\n    await db.set(`students:${cohortId}`, studentMap);\n\n    return { result: studentMap };\n  } catch (error) {\n    return { error };\n  }\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport * as bcsService from \"./bcsService\";\n\nconst bcsContext = createContext({\n  isLoggedIn: false,\n  pending: false,\n  signOut: () => {},\n  login: ({ email, password }) => {},\n  cohorts: () => {},\n});\n\nexport function BcsProvider({ children }) {\n  const [state, setState] = useState({\n    error: \"\",\n    pending: true,\n    isLoggedIn: false,\n  });\n\n  useEffect(() => {\n    let timerId;\n    bcsService.isLoggedIn().then((isLoggedIn) => {\n      setState((prevState) => ({\n        ...prevState,\n        isLoggedIn,\n        pending: false,\n      }));\n    });\n    return () => clearTimeout(timerId);\n  }, []);\n\n  const signOut = async () => {\n    try {\n      await bcsService.signOut();\n      setState((prevState) => ({ ...prevState, isLoggedIn: false }));\n    } catch (error) {\n      console.error(error);\n      setState((prevState) => ({\n        ...prevState,\n        error: \"Unable to log out. Please try again.\",\n      }));\n    }\n  };\n\n  const loginError = (error) => {\n    return setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: false,\n      error,\n    }));\n  };\n\n  const login = async ({ email, password }) => {\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { error } = await bcsService.login({ email, password });\n    if (error?.message === \"INVALID_CREDENTIALS\") {\n      return loginError(\"Invalid username or password\");\n    }\n    if (error) {\n      return loginError(\"An unexpected error occurred. Please try again.\");\n    }\n    setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: true,\n      error: \"\",\n    }));\n  };\n\n  return (\n    <bcsContext.Provider value={{ ...state, login, signOut }}>\n      {children}\n    </bcsContext.Provider>\n  );\n}\n\nexport const useBcs = () => useContext(bcsContext);\n\nconst useAsyncRequestor = (requestor) => {\n  const [state, setState] = useState({\n    pending: false,\n    result: null,\n    error: null,\n    isLoaded: false,\n  });\n  const load = async () => {\n    if (state.isLoaded || state.pending) return;\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { result, error } = await requestor();\n    setState({ result, error, pending: false, isLoaded: true });\n  };\n  return { ...state, load };\n};\n\nexport const useCohorts = () => useAsyncRequestor(bcsService.cohorts);\n\nexport const useStudents = (cohortId) =>\n  useAsyncRequestor(() => bcsService.students({ cohortId }));\n","// removes falsy values from an array\nexport const compactArray = (arr) => arr.filter((val) => val);\n","import { compactArray } from \"./arrayUtil\";\n\nexport const classNamesFromArray = (arr) => compactArray(arr).join(\" \");\n","import { classNamesFromArray } from \"../util\";\n\nfunction OffCanvas({ show, style, title, onClose, children }) {\n  const modalClassName = classNamesFromArray([\n    \"offcanvas\",\n    \"offcanvas-end\",\n    show && \"show\",\n  ]);\n\n  return (\n    <div\n      className={modalClassName}\n      tabIndex={-1}\n      id=\"offCanvas\"\n      aria-labelledby=\"offCanvasLabel\"\n      style={{ visibility: show ? \"visible\" : \"hidden\", ...style }}\n    >\n      <Header onClose={onClose}>{title}</Header>\n      <Body>{children}</Body>\n    </div>\n  );\n}\n\nfunction Header({ onClose, children }) {\n  return (\n    <div className=\"offcanvas-header\">\n      <h5 className=\"offcanvas-title\" id=\"offCanvasLabel\">\n        {children}\n      </h5>\n      <CloseButton onClose={onClose} />\n    </div>\n  );\n}\n\nfunction Body({ children }) {\n  return <div className=\"offcanvas-body small\">{children}</div>;\n}\n\nfunction CloseButton({ onClose }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn-close text-reset\"\n      aria-label=\"Close\"\n      onClick={onClose}\n    />\n  );\n}\n\nexport default OffCanvas;\n","import formatDate from \"@bitty/format-date\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useStudents } from \"../bcs\";\nimport { classNamesFromArray, compactArray } from \"../util\";\nimport OffCanvas from \"./OffCanvas\";\n\nconst MAX_ABSENCES = 5;\n\nfunction Overview() {\n  const { enrollmentId } = useParams();\n  const [offCanvasState, setOffCanvasState] = useState({\n    show: false,\n    title: \"\",\n    children: null,\n  });\n  const students = useStudents(enrollmentId);\n\n  useEffect(() => {\n    students.load();\n  }, [students]);\n\n  if (students.error) {\n    return <p>{students.error}</p>;\n  }\n  if (students.pending || !students.isLoaded) {\n    return <p>Loading students...</p>;\n  }\n\n  const hideOffCanvas = () =>\n    setOffCanvasState((prevState) => ({ ...prevState, show: false }));\n\n  const handleHelp = () => {\n    setOffCanvasState({\n      show: true,\n      title: \"Dashboard Help\",\n      children: <DashboardHelp />,\n    });\n  };\n\n  const handleSelectStudent = (student) => {\n    setOffCanvasState({\n      show: true,\n      title: `${student.firstName} ${student.lastName}`,\n      children: <StudentDetails student={student} />,\n    });\n  };\n\n  return (\n    <>\n      <StudentTable\n        onSelectStudent={handleSelectStudent}\n        students={Array.from(students.result.values())}\n        onHelp={handleHelp}\n      />\n      <OffCanvas onClose={hideOffCanvas} {...offCanvasState} />\n    </>\n  );\n}\n\nfunction DashboardHelp() {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      <li className=\"list-group-item\">\n        Students failing to meet completion requirements are highlighted in\n        pink.\n      </li>\n      <li className=\"list-group-item\">\n        Students at risk of failing to meet completion requirements are\n        highlighted in yellow.\n      </li>\n    </ul>\n  );\n}\n\nfunction StudentDetails({ student }) {\n  return (\n    <>\n      <AbsencesSection attendance={student.attendance} />\n      <HomeworkIssuesSection grades={student.grades} />\n    </>\n  );\n}\n\nfunction AbsencesSection({ attendance }) {\n  const absentSess = attendance.filter((sess) => sess.absent);\n  return (\n    <>\n      <h6>Absences</h6>\n      {\n        <ul className=\"list-group list-group-flush\">\n          {absentSess.length === 0 && <p>None</p>}\n          {absentSess.map((sess) => (\n            <li key={sess.startTime} className=\"list-group-item\">\n              {formatDate(new Date(sess.startTime), \"M/D/YYYY\")}{\" \"}\n              {sess.excused && \"excused\"}\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n}\n\nfunction HomeworkIssuesSection({ grades }) {\n  const isIssue = (grade) =>\n    (grade.status !== \"graded\" || grade.mark === \"I\") &&\n    Date.parse(grade.assignment.effectiveDueDate) < Date.now();\n\n  const listItems = compactArray(\n    grades.filter(isIssue).map((grade) => {\n      return <HomeworkIssueItem key={grade.assignment.title} grade={grade} />;\n    })\n  );\n  return (\n    <>\n      <h6 className=\"mt-3\">Homework Issues</h6>\n      {listItems.length === 0 ? (\n        <p>None</p>\n      ) : (\n        <ul className=\"list-group list-group-flush\">{listItems}</ul>\n      )}\n    </>\n  );\n}\n\nfunction HomeworkIssueItem({ grade }) {\n  const { mark, status } = grade;\n  const { title } = grade.assignment;\n\n  let statusText = \"not submitted\";\n  let statusColor = \"danger\";\n  if (mark === \"I\") {\n    statusText = \"incomplete\";\n  } else if (status === \"ungraded\") {\n    statusText = \"ungraded\";\n    statusColor = \"warning\";\n  }\n\n  const badgeClassName = classNamesFromArray([\n    \"badge\",\n    `bg-${statusColor}`,\n    statusColor === \"warning\" && \"text-dark\",\n  ]);\n\n  return (\n    <li className=\"list-group-item d-flex align-items-center\">\n      <div style={{ minWidth: 90 }}>\n        <span className={badgeClassName}>{statusText}</span>\n      </div>\n      <div className=\"ps-2\">{title}</div>\n    </li>\n  );\n}\n\nfunction StudentTable({ students, onSelectStudent, onHelp }) {\n  return (\n    <table\n      className=\"table table-sm table-hover mt-5 caption-top mx-auto\"\n      style={{ maxWidth: 650 }}\n    >\n      <caption>\n        Click on a student to view additional details.{\" \"}\n        <button\n          style={{ verticalAlign: \"inherit\", padding: 0, cursor: \"help\" }}\n          className=\"btn btn-link\"\n          onClick={onHelp}\n        >\n          help\n        </button>\n      </caption>\n      <thead>\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Absent</th>\n          <th scope=\"col\">Incomplete</th>\n          <th scope=\"col\">Not Submitted</th>\n          <th scope=\"col\">Missed HW</th>\n          <th scope=\"col\">Ungraded</th>\n        </tr>\n      </thead>\n      <tbody>\n        {students.map((student) => (\n          <StudentTableRow\n            key={student.id}\n            student={student}\n            onSelectStudent={onSelectStudent}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nconst totalGrades = (grades) => {\n  let totalIncomplete = 0;\n  let totalNotSubmitted = 0;\n  let totalUngraded = 0;\n  grades\n    .filter(\n      (grade) => Date.parse(grade.assignment.effectiveDueDate) < Date.now()\n    )\n    .forEach((grade) => {\n      if (grade.status === \"graded\" && grade.mark !== \"I\") {\n        return;\n      }\n      if (grade.mark === \"I\") {\n        totalIncomplete += 1;\n        return;\n      }\n      if (grade.status === \"not_submitted\") {\n        totalNotSubmitted += 1;\n        return;\n      }\n      totalUngraded += 1;\n    });\n  const totalMissedHW = totalIncomplete + totalNotSubmitted;\n  return { totalIncomplete, totalNotSubmitted, totalUngraded, totalMissedHW };\n};\n\nfunction StudentTableRow({ student, onSelectStudent }) {\n  const { firstName, lastName, totalAbsent } = student;\n  const { totalIncomplete, totalNotSubmitted, totalUngraded, totalMissedHW } =\n    totalGrades(student.grades);\n\n  let trClassName = \"\";\n  if (totalAbsent > MAX_ABSENCES || totalMissedHW > 2) {\n    trClassName = \"table-danger\";\n  } else if (totalAbsent > MAX_ABSENCES - 1 || totalMissedHW > 1) {\n    trClassName = \"table-warning\";\n  }\n\n  return (\n    <tr className={trClassName} onClick={() => onSelectStudent(student)}>\n      <td>\n        {firstName} {lastName}\n      </td>\n      <td>{totalAbsent}</td>\n      <td>{totalIncomplete}</td>\n      <td>{totalNotSubmitted}</td>\n      <td>{totalMissedHW}</td>\n      <td>{totalUngraded}</td>\n    </tr>\n  );\n}\n\nexport default Overview;\n","import { useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useCohorts } from \"../bcs\";\n\nfunction Cohorts() {\n  const cohorts = useCohorts();\n  useEffect(() => {\n    cohorts.load();\n  }, [cohorts]);\n\n  if (cohorts.pending || !cohorts.isLoaded) {\n    return <p>Loading cohorts...</p>;\n  }\n  if (cohorts.error) {\n    return <p>Error loading cohorts. {cohorts.error.message}</p>;\n  }\n  if (cohorts.result.length === 0) {\n    return <p>You don't have any cohorts.</p>;\n  }\n  if (cohorts.result.length === 1) {\n    return <Redirect to={`/${cohorts.result[0].enrollmentId}`} />;\n  }\n  return (\n    <>\n      <h1>Please choose a cohort</h1>\n      {cohorts.result.map(({ name, enrollmentId }) => (\n        <Link\n          key={enrollmentId}\n          to={`/${enrollmentId}`}\n          className=\"btn btn-outline-secondary\"\n        >\n          {name}\n        </Link>\n      ))}{\" \"}\n    </>\n  );\n}\n\nexport default Cohorts;\n","import { Switch, Route } from \"react-router\";\nimport Overview from \"./Overview\";\nimport Cohorts from \"./Cohorts\";\n\nfunction Dashboard() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route path=\"/:enrollmentId\">\n          <Overview />\n        </Route>\n        <Route path=\"/\">\n          <Cohorts />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport * as idb from \"idb-keyval\";\nimport { useBcs } from \"./bcs\";\n\nconst rememberEmail = (email) => idb.set(\"login:email\", email);\nconst clearEmail = () => idb.del(\"login:email\");\nconst getEmail = () => idb.get(\"login:email\");\n\n// Based on https://reactrouter.com/web/example/auth-workflow. The login form\n// will redirect back to the page the use tried to access after a successful\n// login. Falls back to \"/\" if there is no history yet.\nfunction Login() {\n  const history = useHistory();\n  const location = useLocation();\n  const { login, isLoggedIn, pending, error } = useBcs();\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    remember: false,\n    dirty: false,\n  });\n\n  // Redirect if the user is logged in.\n  useEffect(() => {\n    if (isLoggedIn) {\n      // Get path the user came from (see ProtectedRoute). Fallback to \"/\"\n      const from = { pathname: location.state?.from?.pathname || \"/\" };\n      history.replace(from);\n    }\n  }, [isLoggedIn, history, location]);\n\n  // initialize email from storage\n  useEffect(() => {\n    getEmail().then((email) =>\n      setFormState((prevState) => ({\n        ...prevState,\n        remember: !!email,\n        email: email || \"\",\n      }))\n    );\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormState((prevState) => ({\n      ...prevState,\n      dirty: true,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  const isFormValid = () => {\n    const { email, password, dirty } = formState;\n    return email.trim() && password.trim() && dirty;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password, remember } = formState;\n    const bcsCredentials = {\n      email: email.trim(),\n      password: password.trim(),\n    };\n    setFormState((prevState) => ({ ...prevState, dirty: false }));\n    if (remember) {\n      await rememberEmail(bcsCredentials.email);\n    } else {\n      await clearEmail();\n    }\n    login(bcsCredentials);\n  };\n\n  return (\n    <main style={{ maxWidth: 330 }} className=\"w-100 py-5 mx-auto\">\n      <form onSubmit={handleSubmit}>\n        <Heading />\n        <FormControl\n          label=\"Email address\"\n          type=\"email\"\n          controlId=\"email\"\n          style={{\n            marginBottom: -1,\n            borderBottomRightRadius: 0,\n            borderBottomLeftRadius: 0,\n          }}\n          value={formState.email}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <FormControl\n          label=\"Password\"\n          type=\"password\"\n          controlId=\"password\"\n          style={{\n            borderTopRightRadius: 0,\n            borderTopLeftRadius: 0,\n          }}\n          value={formState.password}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <RememberMeControl\n          controlId=\"remember\"\n          checked={formState.remember}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <SubmitButton disabled={!isFormValid() || pending} pending={pending} />\n        <Alert show={error && !formState.dirty}>{error}</Alert>\n      </form>\n    </main>\n  );\n}\n\nfunction Heading() {\n  return (\n    <h1 className=\"h5 mb-3 fw-normal\">\n      Please sign in with your BCS Credentials\n    </h1>\n  );\n}\n\nfunction FormControl({ label, controlId, ...inputProps }) {\n  return (\n    <div className=\"form-floating\">\n      <input\n        name={controlId}\n        id={controlId}\n        className=\"form-control\"\n        {...inputProps}\n      />\n      <label htmlFor={controlId}>{label}</label>\n    </div>\n  );\n}\n\nfunction RememberMeControl({ controlId, ...inputProps }) {\n  return (\n    <div className=\"my-3 text-center\">\n      <label>\n        <input name={controlId} type=\"checkbox\" {...inputProps} /> Remember me\n      </label>\n    </div>\n  );\n}\n\n// Alert uses css transition to grow/shrink on Y axis.\nfunction Alert({ children, show }) {\n  return (\n    <div\n      className=\"mt-3\"\n      style={{\n        maxHeight: show ? 100 : 0,\n        transition: `max-height ease 400ms`,\n        overflow: \"hidden\",\n        height: \"auto\",\n      }}\n    >\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction SubmitButton({ pending, ...btnProps }) {\n  return (\n    <button\n      type=\"submit\"\n      className=\"w-100 btn btn-lg btn-primary\"\n      {...btnProps}\n    >\n      {pending ? <ButtonSpinner>Loading...</ButtonSpinner> : \"Submit\"}\n    </button>\n  );\n}\n\nfunction ButtonSpinner({ children }) {\n  return (\n    <>\n      <span\n        className=\"spinner-border spinner-border-sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n      <span className=\"visually-hidden\">{children}</span>\n    </>\n  );\n}\n\nexport default Login;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useBcs } from \"./bcs\";\nfunction PrivateRoute({ children, ...rest }) {\n  const { isLoggedIn } = useBcs();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { Link } from \"react-router-dom\";\nimport { useBcs } from \"./bcs\";\n\nfunction TopBar() {\n  const { isLoggedIn, signOut } = useBcs();\n  return (\n    <header className=\"navbar navbar-dark bg-dark shadow\">\n      <Link className=\"navbar-brand px-3 col-sm-3\" to=\"/\">\n        Instructor Dashboard\n      </Link>\n      <div className=\"navbar-nav px-3\">\n        <div className=\"nav-item\">\n          {isLoggedIn && (\n            <button className=\"nav-link bg-dark btn\" onClick={signOut}>\n              Sign out\n            </button>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default TopBar;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BcsProvider } from \"./bcs\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport TopBar from \"./TopBar\";\n\nfunction App() {\n  return (\n    <BcsProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <TopBar />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Dashboard />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </BcsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}