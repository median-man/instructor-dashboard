{"version":3,"sources":["errors.js","bcs/bcsClient.js","bcs/bcsService.js","bcs/index.js","common/Loader.js","util/arrayUtil.js","util/classNames.js","util/useDocumentMeta.js","Overview/OffCanvas.js","Overview/StudentTable.js","Overview/Overview.js","Overview/index.js","Dashboard/Cohorts.js","Dashboard/SideBar.js","Assignments/Calendar.js","Assignments/GradesPieChart.js","Assignments/ProgressBar.js","Assignments/Assignments.js","Assignments/index.js","Dashboard/Dashboard.js","Dashboard/index.js","Login.js","common/PrivateRoute.js","common/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["NetworkError","code","message","Error","API_BASENAME","postJSON","endpoint","body","a","headers","fetch","method","JSON","stringify","res","ok","statusText","status","json","getJSON","BcsAuthToken","this","jwtDecode","minutesTimeout","creationTime","Date","parse","window","sessionStorage","removeItem","token","getItem","setItem","authToken","key","requestor","get","set","bcsClient","Map","expiresAt","now","authExpiresAt","email","password","errorCode","authenticationInfo","clear","enrollmentId","sessionId","assignmentId","idb","then","keys","filter","test","forEach","signOut","login","result","error","cohorts","isLoggedIn","me","enrollments","Enrollments","map","enrollment","id","course","name","startDate","endDate","courseId","students","Promise","all","sessions","assignments","studentMap","academicSess","calendarSessions","session","context","contextCode","sessionDetail","sessDetails","stuDetails","student","pick","attendance","totalAbsent","excusedAbsent","grades","absent","absence","startTime","excused","push","requiredAssignmentIds","calendarAssignments","assignment","required","assignmentDetail","assDetail","type","title","letterGrade","grade","submission","mark","assignmentDetails","gradesFromStudents","ungraded","unSubmitted","incomplete","b","c","d","f","Object","find","letter","RegExp","gradeLetter","dueDate","effectiveDueDate","expectedTotal","length","bcsContext","createContext","pending","BcsProvider","children","useState","state","setState","bcsService","prevState","loginError","Provider","value","useBcs","useContext","useAsyncRequestor","isLoaded","load","Loader","className","style","width","height","role","compactArray","arr","val","classNamesFromArray","join","APP_TITLE","process","useDocumentMeta","description","useEffect","document","querySelector","setAttribute","Header","onClose","CloseButton","Body","aria-label","onClick","OffCanvas","show","modalClassName","aria-live","tabIndex","aria-labelledby","visibility","Table","onSelectStudent","onHelp","sortCol","sortOrder","setSortState","sortedStudents","sortBy","reverse","maxWidth","verticalAlign","padding","cursor","TableHeader","onToggleSort","fieldName","current","StudentTableRow","headingConfig","label","screenReaderOnly","headingProps","TableHeadingVisuallyHidden","TableHeading","ariaSort","scope","aria-sort","onKeyUp","e","SortIcon","Icon","SortDown","SortUp","totalIncomplete","totalNotSubmitted","totalUngraded","totalMissedHW","trClassName","StudentTable","DashboardHelp","StudentDetails","AbsencesSection","HomeworkIssuesSection","dateFormatter","Intl","DateTimeFormat","dateStyle","absentSess","sess","format","listItems","HomeworkIssueItem","statusColor","badgeClassName","minWidth","Overview","cohortName","cohort","offCanvasState","setOffCanvasState","studentId","firstName","lastName","Array","from","values","totalGrades","MAX_ABSENCES","Cohorts","to","SideBar","currentCohort","exact","month","day","Calendar","date","formatToParts","reduce","parts","dateParts","defaultProps","colorConfig","colorTransitions","total","GradesPieChart","display","borderRadius","backgroundImage","Math","floor","ProgressBar","min","max","ratio","variant","aria-valuenow","aria-valuemin","aria-valuemax","Assignments","console","Dashboard","match","useRouteMatch","parseInt","params","path","rememberEmail","Heading","FormControl","controlId","inputProps","htmlFor","RememberMeControl","Alert","maxHeight","transition","overflow","SubmitButton","btnProps","ButtonSpinner","aria-hidden","Login","history","useHistory","location","useLocation","remember","dirty","formState","setFormState","pathname","replace","handleInputChange","target","checked","handleSubmit","preventDefault","bcsCredentials","trim","onSubmit","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","onChange","disabled","borderTopRightRadius","borderTopLeftRadius","isFormValid","PrivateRoute","rest","render","TopBar","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b20268d5.chunk.js","sourcesContent":["export class NetworkError extends Error {\n  constructor({ code, message = `Request failed with ${code} status code.` }) {\n    super(message);\n    this.code = code;\n  }\n}\n","import jwtDecode from \"jwt-decode\";\nimport { NetworkError } from \"../errors\";\n\nconst API_BASENAME = \"https://www.bootcampspot.com/api/instructor/v1\";\nconst postJSON = async (endpoint, body, headers = {}) => {\n  const res = await fetch(API_BASENAME + endpoint, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n    body: JSON.stringify(body),\n  });\n  if (!res.ok) {\n    throw new NetworkError({ message: res.statusText, code: res.status });\n  }\n  return res.json();\n};\n\nconst getJSON = async (endpoint, headers = {}) => {\n  const res = await fetch(API_BASENAME + endpoint, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n  });\n  if (!res.ok) {\n    throw new NetworkError({\n      message: res.statusText || \"Network error\",\n      status: res.status,\n    });\n  }\n  return res.json();\n};\n\n/** Class representing an auth token returned by BCS Instructor API. */\nclass BcsAuthToken {\n  get #token() {\n    return window.sessionStorage.getItem(\"authToken\");\n  }\n\n  set #token(token) {\n    return window.sessionStorage.setItem(\"authToken\", token);\n  }\n\n  /**\n   * Get the unix time stamp for the expiration date/time of the token. Returns\n   * -1 if there is no token.\n   *\n   * @returns {number} The unix time stamp (milliseconds)\n   */\n  get expiresAt() {\n    if (!this.#token) {\n      return -1;\n    }\n    const { minutesTimeout, creationTime } = jwtDecode(this.#token);\n    return minutesTimeout * 60 * 1000 + Date.parse(creationTime);\n  }\n\n  /**\n   *\n   * @returns {String} The token string.\n   */\n  toString() {\n    return this.#token;\n  }\n\n  clear() {\n    window.sessionStorage.removeItem(\"authToken\");\n  }\n\n  /**\n   * Sets the token\n   *\n   * @param {string} token token from bcs api\n   */\n  set(token) {\n    this.#token = token;\n  }\n}\n\n/**\n * Class which provides methods for accessing data from the BCS Instructor API.\n */\nclass BcsClient {\n  #cache = new Map();\n  #authToken = new BcsAuthToken();\n\n  /**\n   * Returns time stamp of token expiration or 0.\n   *\n   * @returns {number} Unix ts for auth expiration. (milliseconds)\n   */\n  get authExpiresAt() {\n    return this.#authToken.expiresAt;\n  }\n\n  get isLoggedIn() {\n    return Date.now() < this.authExpiresAt;\n  }\n\n  get #authHeader() {\n    return { authToken: this.#authToken };\n  }\n\n  /**\n   * Sends login request to BCS API and updates this.#authToken with the\n   * response. Throws if the login fails.\n   *\n   * @param {string} email\n   * @param {string} password\n   */\n  async login(email, password) {\n    const res = await postJSON(\"/login\", { email, password });\n    if (res.errorCode) {\n      throw new Error(res.errorCode);\n    }\n    this.#authToken.set(res.authenticationInfo.authToken);\n  }\n\n  /**\n   * Remove auth token and clear stored responses.\n   */\n  signOut() {\n    this.#cache.clear();\n    this.#authToken.clear();\n  }\n\n  /**\n   * Return response from cache. Falls back to making request and caches the\n   * result before returning the result.\n   *\n   * @param {string} key cache storage key\n   * @param {function} requestor Async function making the request.\n   * @returns {Promise<*>} Result from requestor.\n   */\n  async #withCache(key, requestor) {\n    let res = this.#cache.get(key);\n    if (!res) {\n      res = await requestor();\n      this.#cache.set(key, res);\n    }\n    return res;\n  }\n\n  /**\n   * Fetch data from /me endpoint\n   *\n   * @returns {Promise<Object>}\n   */\n  me() {\n    return this.#withCache(\"me\", () => getJSON(\"/me\", this.#authHeader));\n  }\n\n  /**\n   * Fetch data from /sessions endpoint.\n   *\n   * @param {number} enrollmentId bcs enrollment id\n   * @returns {Promise<Object>}\n   */\n  sessions(enrollmentId) {\n    return this.#withCache(`sessions/${enrollmentId}`, () =>\n      postJSON(\"/sessions\", { enrollmentId }, this.#authHeader)\n    );\n  }\n\n  /**\n   * Fetch data from /sessionDetail endpoint.\n   *\n   * @param {number} sessionId bcs session id\n   * @returns {Promise<Object>}\n   */\n  sessionDetail(sessionId) {\n    return this.#withCache(`sessionDetail/${sessionId}`, () =>\n      postJSON(\"/sessionDetail\", { sessionId }, this.#authHeader)\n    );\n  }\n\n  /**\n   * Fetch data from /assignments endpoint.\n   *\n   * @param {number} enrollmentId bcs enrollment id\n   * @returns {Promise<Object>}\n   */\n  assignments(enrollmentId) {\n    return this.#withCache(`assignments/${enrollmentId}`, () =>\n      postJSON(\"/assignments\", { enrollmentId }, this.#authHeader)\n    );\n  }\n\n  /**\n   * Fetch data from /assignmentDetail endpoint.\n   *\n   * @param {number} assignmentId bcs assignment id\n   * @returns {Promise<Object>}\n   */\n  assignmentDetail(assignmentId) {\n    return this.#withCache(`assignmentDetail/${assignmentId}`, () =>\n      postJSON(\"/assignmentDetail\", { assignmentId }, this.#authHeader)\n    );\n  }\n}\n\nexport const bcsClient = new BcsClient();\n","import * as idb from \"idb-keyval\";\nimport { bcsClient } from \"./bcsClient\";\nimport pick from \"lodash/pick\";\n\n// clear keyval store which could contain sensitive data from previous version\n// of the client.\nidb\n  .keys()\n  .then((keys) =>\n    keys.filter((key) => /^bcs/.test(key)).forEach((key) => idb.del(key))\n  );\n\nexport const signOut = () => bcsClient.signOut();\n\nexport const isLoggedIn = () => bcsClient.isLoggedIn;\n\nexport const login = async ({ email, password }) => {\n  try {\n    await bcsClient.login(email, password);\n    return { result: true };\n  } catch (error) {\n    signOut();\n    return { error };\n  }\n};\n\nexport const cohorts = async () => {\n  try {\n    if (!bcsClient.isLoggedIn) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n    const { Enrollments: enrollments } = await bcsClient.me();\n    if (!enrollments) {\n      throw new Error(\"You don't have any cohorts.\");\n    }\n    const result = enrollments.map((enrollment) => {\n      const enrollmentId = enrollment.id;\n      const { name, startDate, endDate, id: courseId } = enrollment.course;\n      return { name, startDate, endDate, courseId, enrollmentId };\n    });\n    return { result };\n  } catch (error) {\n    if (error.code === 401) {\n      error.message = \"You must login.\";\n      signOut();\n    }\n    return { error };\n  }\n};\n\nexport const students = async ({ enrollmentId }) => {\n  try {\n    if (!bcsClient.isLoggedIn) {\n      throw new Error(\"You must be logged in to access cohorts.\");\n    }\n\n    const [sessions, assignments] = await Promise.all([\n      bcsClient.sessions(enrollmentId),\n      bcsClient.assignments(enrollmentId),\n    ]);\n    const studentMap = new Map();\n\n    // fetch session details for each session to compile the attendance of each student\n    const academicSess = sessions.calendarSessions\n      .filter((session) => session.context.contextCode === \"academic\")\n      .map((session) => session.session.id);\n\n    const sessionDetails = await Promise.all(\n      academicSess.map((sessionId) => bcsClient.sessionDetail(sessionId))\n    );\n\n    // populate studentAttendance with students and attendance data.\n    sessionDetails.forEach((sessDetails) => {\n      sessDetails.students.forEach((stuDetails) => {\n        const key = stuDetails.student.id;\n        let student = studentMap.get(key);\n        if (!student) {\n          student = pick(stuDetails.student, [\n            \"id\",\n            \"email\",\n            \"firstName\",\n            \"lastName\",\n            \"active\",\n          ]);\n          student.attendance = [];\n          student.totalAbsent = 0;\n          student.excusedAbsent = 0;\n          student.grades = [];\n          studentMap.set(key, student);\n        }\n\n        const attendance = {\n          absent: !!stuDetails.absence,\n          startTime: sessDetails.session.session.startTime,\n          excused: stuDetails.absence?.excused || false,\n        };\n        if (attendance.absent && attendance.excused) {\n          student.excusedAbsent += 1;\n        }\n        if (attendance.absent) {\n          student.totalAbsent += 1;\n        }\n        student.attendance.push(attendance);\n      });\n    });\n\n    // fetch assignment details to compile homework records for each student\n    const requiredAssignmentIds = assignments.calendarAssignments\n      .filter((assignment) => assignment.required)\n      .map((assignment) => assignment.id);\n\n    const assignmentDetails = await Promise.all(\n      requiredAssignmentIds.map((assignmentId) =>\n        bcsClient.assignmentDetail(assignmentId)\n      )\n    );\n\n    assignmentDetails.forEach((assDetail) => {\n      const assignment = pick(assDetail.assignment, [\n        \"id\",\n        \"dueDate\",\n        \"effectiveDueDate\",\n        \"title\",\n      ]);\n      assignment.type = /project/i.test(assignment.title)\n        ? \"project\"\n        : \"homework\";\n\n      assDetail.students.forEach((student) => {\n        const { id } = student.student;\n        const letterGrade = student.grade?.grade;\n        const grade = {\n          assignment,\n          status: letterGrade\n            ? \"graded\"\n            : student.submission\n            ? \"ungraded\"\n            : \"not_submitted\",\n          mark: letterGrade || \"\",\n        };\n        const studentRecord = studentMap.get(id);\n        studentRecord.grades.push(grade);\n      });\n    });\n\n    return { result: studentMap };\n  } catch (error) {\n    return { error };\n  }\n};\n\nexport const assignments = async ({ enrollmentId }) => {\n  try {\n    if (!bcsClient.isLoggedIn) {\n      throw new Error(\"You must be logged in to access assignments.\");\n    }\n    const assignments = await bcsClient.assignments(enrollmentId);\n    const assignmentDetails = await Promise.all(\n      assignments.calendarAssignments\n        .filter((a) => a.required)\n        .map((a) => bcsClient.assignmentDetail(a.id))\n    );\n    const gradesFromStudents = (students) => {\n      let ungraded = 0;\n      let unSubmitted = 0;\n      let incomplete = 0;\n      let grades = {\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0,\n        f: 0,\n      };\n      const gradeLetter = (grade) =>\n        Object.keys(grades).find((letter) =>\n          new RegExp(letter, \"i\").test(grade.grade)\n        );\n      students.forEach(({ grade, submission }) => {\n        if (!submission) {\n          unSubmitted += 1;\n          return;\n        }\n        if (!grade) {\n          ungraded += 1;\n          return;\n        }\n        if (grade.grade === \"I\") {\n          incomplete += 1;\n          return;\n        }\n        grades[gradeLetter(grade)] += 1;\n      });\n      return { ungraded, unSubmitted, incomplete, grades };\n    };\n    const result = assignmentDetails.map(({ assignment, students }) => {\n      return {\n        id: assignment.id,\n        dueDate: Date.parse(assignment.effectiveDueDate),\n        title: assignment.title,\n        expectedTotal: students.length,\n        ...gradesFromStudents(students),\n      };\n    });\n    return { error: null, result };\n  } catch (error) {\n    return { error, result: null };\n  }\n};\n","import { createContext, useContext, useState } from \"react\";\nimport * as bcsService from \"./bcsService\";\n\nconst bcsContext = createContext({\n  isLoggedIn: false,\n  pending: false,\n  signOut: () => {},\n  login: ({ email, password }) => {},\n  cohorts: () => {},\n});\n\nexport function BcsProvider({ children }) {\n  const [state, setState] = useState(() => ({\n    error: \"\",\n    pending: false,\n    isLoggedIn: bcsService.isLoggedIn(),\n  }));\n\n  const signOut = async () => {\n    bcsService.signOut();\n    setState((prevState) => ({ ...prevState, isLoggedIn: false }));\n  };\n\n  const loginError = (error) => {\n    return setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: false,\n      error,\n    }));\n  };\n\n  const login = async ({ email, password }) => {\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { error } = await bcsService.login({ email, password });\n    if (error?.message === \"INVALID_CREDENTIALS\") {\n      return loginError(\"Invalid username or password\");\n    }\n    if (error) {\n      return loginError(\"An unexpected error occurred. Please try again.\");\n    }\n    setState((prevState) => ({\n      ...prevState,\n      pending: false,\n      isLoggedIn: true,\n      error: \"\",\n    }));\n  };\n\n  return (\n    <bcsContext.Provider value={{ ...state, login, signOut }}>\n      {children}\n    </bcsContext.Provider>\n  );\n}\n\nexport const useBcs = () => useContext(bcsContext);\n\nconst useAsyncRequestor = (requestor) => {\n  const [state, setState] = useState({\n    pending: false,\n    result: null,\n    error: null,\n    isLoaded: false,\n  });\n  const load = async () => {\n    if (state.isLoaded || state.pending) return;\n    setState((prevState) => ({ ...prevState, pending: true }));\n    const { result, error } = await requestor();\n    setState({ result, error, pending: false, isLoaded: true });\n  };\n  return { ...state, load };\n};\n\nexport const useCohorts = () => useAsyncRequestor(bcsService.cohorts);\n\nexport const useStudents = (enrollmentId) =>\n  useAsyncRequestor(() => bcsService.students({ enrollmentId }));\n\nexport const useAssignments = (enrollmentId) =>\n  useAsyncRequestor(() => bcsService.assignments({ enrollmentId }));\n","function Loader({ children }) {\n  return (\n    <div className=\"d-flex h-100 w-100 justify-content-center align-items-center flex-column\">\n      <div\n        style={{ width: \"3.5rem\", height: \"3.5rem\" }}\n        className=\"spinner-border text-secondary mb-4\"\n        role=\"status\"\n      ></div>\n      <p className=\"lead\">{children}</p>\n    </div>\n  );\n}\n\nexport default Loader;\n","// removes falsy values from an array\nexport const compactArray = (arr) => arr.filter((val) => val);\n","import { compactArray } from \"./arrayUtil\";\n\nexport const classNamesFromArray = (arr) => compactArray(arr).join(\" \");\n","import { useEffect } from \"react\";\n\nconst APP_TITLE = process.env.REACT_APP_TITLE;\nconst DEFAULT_DESCRIPTION = process.env.REACT_APP_DOC_DESCRIPTION;\n\nconst descriptionMeta = () => document.querySelector(\"meta[name=description]\");\n\n/**\n * Updates the document title and meta tag. Always appends app title from\n * REACT_APP_TITLE env var to the title.\n *\n * @param {{title: string|undefined, description: string|undefined}} param0\n */\nexport const useDocumentMeta = ({\n  title = APP_TITLE,\n  description = DEFAULT_DESCRIPTION,\n}) => {\n  useEffect(() => {\n    document.title = `${title} | ${APP_TITLE}`;\n  }, [title]);\n\n  useEffect(() => {\n    descriptionMeta().setAttribute(\"content\", description);\n  }, [description]);\n};\n","import { classNamesFromArray } from \"../util\";\n\nfunction OffCanvas({ show, style, title, onClose, children }) {\n  const modalClassName = classNamesFromArray([\n    \"offcanvas\",\n    \"offcanvas-end\",\n    show && \"show\",\n  ]);\n\n  return (\n    <section\n      aria-live=\"polite\"\n      className={modalClassName}\n      tabIndex={-1}\n      id=\"offCanvas\"\n      aria-labelledby=\"offCanvasLabel\"\n      style={{ visibility: show ? \"visible\" : \"hidden\", ...style }}\n    >\n      <Header onClose={onClose}>{title}</Header>\n      <Body>{children}</Body>\n    </section>\n  );\n}\n\nfunction Header({ onClose, children }) {\n  return (\n    <div className=\"offcanvas-header\">\n      <h5 className=\"offcanvas-title\" id=\"offCanvasLabel\">\n        {children}\n      </h5>\n      <CloseButton onClose={onClose} />\n    </div>\n  );\n}\n\nfunction Body({ children }) {\n  return <div className=\"offcanvas-body small\">{children}</div>;\n}\n\nfunction CloseButton({ onClose }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn-close text-reset\"\n      aria-label=\"Close\"\n      onClick={onClose}\n    />\n  );\n}\n\nexport default OffCanvas;\n","import { useState } from \"react\";\nimport { ReactComponent as SortUp } from \"bootstrap-icons/icons/sort-up.svg\";\nimport { ReactComponent as SortDown } from \"bootstrap-icons/icons/sort-down.svg\";\nimport sortBy from \"lodash/sortBy\";\n\nfunction StudentTable({ students, onSelectStudent, onHelp }) {\n  return (\n    <Table\n      students={students}\n      onSelectStudent={onSelectStudent}\n      onHelp={onHelp}\n    />\n  );\n}\n\nfunction Table({ students, onSelectStudent, onHelp }) {\n  const [{ sortCol, sortOrder }, setSortState] = useState({\n    sortCol: \"name\",\n    sortOrder: 1,\n  });\n\n  // _.sortBy creates a new array\n  const sortedStudents = sortBy(students, sortCol);\n\n  if (sortOrder === -1) {\n    sortedStudents.reverse();\n  }\n\n  const handleToggleSort = (fieldName) => {\n    setSortState((current) => ({\n      sortCol: fieldName,\n      sortOrder:\n        // flip sort order only when fieldName is the current sortCol. Sort in\n        // ASC order when the sortCol changes.\n        current.sortCol === fieldName ? current.sortOrder * -1 : 1,\n    }));\n  };\n\n  return (\n    <table\n      className=\"table table-sm table-hover mt-5 caption-top mx-auto\"\n      style={{ maxWidth: \"45rem\" }}\n    >\n      <caption>\n        Click on a student to view additional details.{\" \"}\n        <button\n          style={{ verticalAlign: \"inherit\", padding: 0, cursor: \"help\" }}\n          className=\"btn btn-link\"\n          onClick={onHelp}\n        >\n          help\n        </button>\n      </caption>\n      <TableHeader\n        sortCol={sortCol}\n        sortOrder={sortOrder}\n        onToggleSort={handleToggleSort}\n      />\n      <tbody>\n        {sortedStudents.map((student) => (\n          <StudentTableRow\n            key={student.id}\n            student={student}\n            onSelectStudent={onSelectStudent}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nconst headingConfig = [\n  {\n    label: \"Name\",\n    fieldName: \"name\",\n  },\n  {\n    label: \"Absent\",\n    fieldName: \"totalAbsent\",\n  },\n  {\n    label: \"Incomplete\",\n    fieldName: \"totalIncomplete\",\n  },\n  {\n    label: \"Not Submitted\",\n    fieldName: \"totalNotSubmitted\",\n  },\n  {\n    label: \"Missed HW\",\n    fieldName: \"totalMissedHW\",\n  },\n  {\n    label: \"Ungraded\",\n    fieldName: \"totalUngraded\",\n  },\n  {\n    // Status column is for screen-readers. Color variants are used to convey\n    // the status.\n    label: \"Status\",\n    fieldName: \"status\",\n    screenReaderOnly: true,\n  },\n];\n\nfunction TableHeader({ sortCol, sortOrder, onToggleSort }) {\n  return (\n    <thead>\n      <tr>\n        {headingConfig.map((headingProps) =>\n          headingProps.screenReaderOnly ? (\n            <TableHeadingVisuallyHidden\n              key={headingProps.fieldName}\n              {...headingProps}\n            />\n          ) : (\n            <TableHeading\n              key={headingProps.fieldName}\n              sortCol={sortCol}\n              sortOrder={sortOrder}\n              onToggleSort={onToggleSort}\n              {...headingProps}\n            />\n          )\n        )}\n      </tr>\n    </thead>\n  );\n}\n\nfunction TableHeading({ sortOrder, sortCol, label, fieldName, onToggleSort }) {\n  // use null when not the actively sorted column. WAI-ARIA states that \"authors\n  // SHOULD apply aria-sort to only one header at a time\".\n  // (https://www.digitala11y.com/aria-sort-properties/)\n  const ariaSort =\n    sortCol !== fieldName ? null : sortOrder === 1 ? \"ascending\" : \"descending\";\n\n  return (\n    <th scope=\"col\" aria-sort={ariaSort}>\n      <span\n        tabIndex={0}\n        role=\"button\"\n        onClick={() => onToggleSort(fieldName)}\n        onKeyUp={(e) => e.key === \"Enter\" && onToggleSort(fieldName)}\n        style={{ cursor: \"pointer\" }}\n      >\n        {label} <SortIcon sortOrder={sortOrder} show={sortCol === fieldName} />\n      </span>\n    </th>\n  );\n}\n\nfunction TableHeadingVisuallyHidden({ label }) {\n  return (\n    <th scope=\"col\" className=\"visually-hidden\">\n      {label}\n    </th>\n  );\n}\n\nfunction SortIcon({ sortOrder, show }) {\n  const style = { visibility: show ? \"visible\" : \"hidden\" };\n  const Icon = sortOrder === 1 ? SortDown : SortUp;\n  return <Icon aria-label=\"toggle sort\" style={style} />;\n}\n\nfunction StudentTableRow({ student, onSelectStudent }) {\n  const {\n    id,\n    name,\n    totalAbsent,\n    totalIncomplete,\n    totalNotSubmitted,\n    totalUngraded,\n    totalMissedHW,\n    status,\n  } = student;\n\n  const trClassName =\n    status === \"ok\"\n      ? \"\"\n      : status === \"incomplete\"\n      ? \"table-danger\"\n      : \"table-warning\";\n\n  return (\n    <tr\n      role=\"button\"\n      className={trClassName}\n      onClick={() => onSelectStudent(id)}\n      onKeyUp={(e) => e.key === \"Enter\" && onSelectStudent(id)}\n      tabIndex={0}\n    >\n      <td>{name}</td>\n      <td>{totalAbsent}</td>\n      <td>{totalIncomplete}</td>\n      <td>{totalNotSubmitted}</td>\n      <td>{totalMissedHW}</td>\n      <td>{totalUngraded}</td>\n      {/* Status column for screen-readers only */}\n      <td className=\"visually-hidden\">{status}</td>\n    </tr>\n  );\n}\n\nexport default StudentTable;\n","import { useEffect, useState } from \"react\";\nimport { useStudents } from \"../bcs\";\nimport { classNamesFromArray, compactArray, useDocumentMeta } from \"../util\";\nimport Loader from \"../common/Loader\";\nimport OffCanvas from \"./OffCanvas\";\nimport Table from \"./StudentTable\";\n\nconst MAX_ABSENCES = 5;\n\nconst pageTitle = (cohortName) =>\n  cohortName ? `Overview: ${cohortName}` : \"Overview\";\n\nconst totalGrades = (grades) => {\n  let totalIncomplete = 0;\n  let totalNotSubmitted = 0;\n  let totalUngraded = 0;\n  grades\n    .filter(\n      (grade) => Date.parse(grade.assignment.effectiveDueDate) < Date.now()\n    )\n    .forEach((grade) => {\n      if (grade.status === \"graded\" && grade.mark !== \"I\") {\n        return;\n      }\n      if (grade.mark === \"I\") {\n        totalIncomplete += 1;\n        return;\n      }\n      if (grade.status === \"not_submitted\") {\n        totalNotSubmitted += 1;\n        return;\n      }\n      totalUngraded += 1;\n    });\n  const totalMissedHW = totalIncomplete + totalNotSubmitted;\n  return { totalIncomplete, totalNotSubmitted, totalUngraded, totalMissedHW };\n};\n\nfunction Overview({ cohort }) {\n  const [offCanvasState, setOffCanvasState] = useState({\n    show: false,\n    title: \"\",\n    children: null,\n  });\n  useDocumentMeta({ title: pageTitle(cohort.name) });\n\n  const students = useStudents(cohort.enrollmentId);\n\n  useEffect(() => {\n    students.load();\n  }, [students]);\n\n  if (students.error) {\n    return <p>{students.error}</p>;\n  }\n  if (students.pending || !students.isLoaded) {\n    return <Loader>Loading student data...</Loader>;\n  }\n\n  const hideOffCanvas = () =>\n    setOffCanvasState((prevState) => ({ ...prevState, show: false }));\n\n  const handleHelp = () => {\n    setOffCanvasState({\n      show: true,\n      title: \"Dashboard Help\",\n      children: <DashboardHelp />,\n    });\n  };\n\n  const handleSelectStudent = (studentId) => {\n    const student = students.result.get(studentId);\n    setOffCanvasState({\n      show: true,\n      title: `${student.firstName} ${student.lastName}`,\n      children: <StudentDetails student={student} />,\n    });\n  };\n\n  return (\n    <>\n      <Table\n        onHelp={handleHelp}\n        onSelectStudent={handleSelectStudent}\n        students={Array.from(students.result.values()).map((student) => {\n          const { firstName, lastName, totalAbsent, id } = student;\n          const name = `${firstName} ${lastName}`;\n          const {\n            totalIncomplete,\n            totalNotSubmitted,\n            totalUngraded,\n            totalMissedHW,\n          } = totalGrades(student.grades);\n\n          let status;\n          if (totalAbsent > MAX_ABSENCES || totalMissedHW > 2) {\n            status = \"incomplete\";\n          } else if (totalAbsent > MAX_ABSENCES - 1 || totalMissedHW > 1) {\n            status = \"warning\";\n          } else {\n            status = \"ok\";\n          }\n\n          return {\n            id,\n            name,\n            totalAbsent,\n            totalIncomplete,\n            totalNotSubmitted,\n            totalUngraded,\n            totalMissedHW,\n            status,\n          };\n        })}\n      />\n      <OffCanvas onClose={hideOffCanvas} {...offCanvasState} />\n    </>\n  );\n}\n\nfunction DashboardHelp() {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      <li className=\"list-group-item\">\n        Students failing to meet completion requirements are highlighted in\n        pink.\n      </li>\n      <li className=\"list-group-item\">\n        Students at risk of failing to meet completion requirements are\n        highlighted in yellow.\n      </li>\n    </ul>\n  );\n}\n\nfunction StudentDetails({ student }) {\n  return (\n    <>\n      <AbsencesSection attendance={student.attendance} />\n      <HomeworkIssuesSection grades={student.grades} />\n    </>\n  );\n}\n\nconst dateFormatter = new Intl.DateTimeFormat({ dateStyle: \"short\" });\n\nfunction AbsencesSection({ attendance }) {\n  const absentSess = attendance.filter((sess) => sess.absent);\n  return (\n    <>\n      <h6>Absences</h6>\n      {\n        <ul className=\"list-group list-group-flush\">\n          {absentSess.length === 0 && <p>None</p>}\n          {absentSess.map((sess) => (\n            <li key={sess.startTime} className=\"list-group-item\">\n              {dateFormatter.format(new Date(sess.startTime))}{\" \"}\n              {sess.excused && \"excused\"}\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n}\n\nfunction HomeworkIssuesSection({ grades }) {\n  const isIssue = (grade) =>\n    (grade.status !== \"graded\" || grade.mark === \"I\") &&\n    Date.parse(grade.assignment.effectiveDueDate) < Date.now();\n\n  const listItems = compactArray(\n    grades.filter(isIssue).map((grade) => {\n      return <HomeworkIssueItem key={grade.assignment.title} grade={grade} />;\n    })\n  );\n  return (\n    <>\n      <h6 className=\"mt-3\">Homework Issues</h6>\n      {listItems.length === 0 ? (\n        <p>None</p>\n      ) : (\n        <ul className=\"list-group list-group-flush\">{listItems}</ul>\n      )}\n    </>\n  );\n}\n\nfunction HomeworkIssueItem({ grade }) {\n  const { mark, status } = grade;\n  const { title } = grade.assignment;\n\n  let statusText = \"not submitted\";\n  let statusColor = \"danger\";\n  if (mark === \"I\") {\n    statusText = \"incomplete\";\n  } else if (status === \"ungraded\") {\n    statusText = \"ungraded\";\n    statusColor = \"warning\";\n  }\n\n  const badgeClassName = classNamesFromArray([\n    \"badge\",\n    `bg-${statusColor}`,\n    statusColor === \"warning\" && \"text-dark\",\n  ]);\n\n  return (\n    <li className=\"list-group-item d-flex align-items-center\">\n      <div style={{ minWidth: 90 }}>\n        <span className={badgeClassName}>{statusText}</span>\n      </div>\n      <div className=\"ps-2\">{title}</div>\n    </li>\n  );\n}\n\nexport default Overview;\n","import Overview from \"./Overview\";\nexport default Overview;\n","import { Link, Redirect } from \"react-router-dom\";\nimport { useDocumentMeta } from \"../util\";\n\nfunction Cohorts({ cohorts }) {\n  useDocumentMeta({ title: \"Select a cohort\" });\n\n  if (cohorts.length === 0) {\n    return <p>You don't have any cohorts.</p>;\n  }\n  if (cohorts.length === 1) {\n    return <Redirect to={`/${cohorts[0].enrollmentId}`} />;\n  }\n  return (\n    <main className=\"h-100 w-100 d-flex flex-column align-items-center justify-content-center\">\n      <h1 className=\"h3 mb-5\">Select a course:</h1>\n      <div className=\"card\">\n        <ul className=\"list-group list-group-flush\">\n          {cohorts.map(({ name, enrollmentId }) => (\n            <Link\n              key={enrollmentId}\n              to={`/${enrollmentId}`}\n              className=\"list-group-item list-group-item-action\"\n            >\n              {name}\n            </Link>\n          ))}\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Cohorts;\n","import { NavLink } from \"react-router-dom\";\n\nfunction SideBar({ currentCohort }) {\n  return (\n    <div\n      className=\"d-flex flex-column flex-shrink-0 p-3 text-dark bg-light shadow\"\n      style={{ width: \"13rem\" }}\n    >\n      <div>{currentCohort?.name || \"Select Cohort\"}</div>\n      <hr />\n      {currentCohort && (\n        <ul className=\"nav nav-pills flex-column mb-auto\">\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link link-dark\"\n              exact\n              to={`/${currentCohort.enrollmentId}`}\n            >\n              Overview\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className=\"nav-link link-dark\"\n              to={`/${currentCohort.enrollmentId}/assignments`}\n            >\n              Assignments\n            </NavLink>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default SideBar;\n","import PropTypes from \"prop-types\";\n\nconst dateFormatter = new Intl.DateTimeFormat(\"default\", {\n  month: \"short\",\n  day: \"numeric\",\n});\n\nconst dateParts = (date) =>\n  dateFormatter\n    .formatToParts(date)\n    .reduce((parts, { type, value }) => ({ ...parts, [type]: value }), {});\n\nfunction Calendar({ date, title }) {\n  const { month, day } = dateParts(date);\n\n  return (\n    <div\n      className=\"d-flex flex-column text-center border\"\n      title={title}\n      style={{ width: \"3.4rem\" }}\n    >\n      <div className=\"bg-primary text-white fs-6\">{month}</div>\n      <div className=\"py-1 fs-4 fw-bold bg-light\">{day}</div>\n    </div>\n  );\n}\n\nCalendar.defaultProps = { date: Date.now() };\n\nCalendar.propTypes = { date: PropTypes.number, title: PropTypes.string };\n\nexport default Calendar;\n","// const colorMap = {\n//   a: \"#198754\",\n//   b: \"#0dcaf0\",\n//   c: \"#6c757d\",\n//   d: \"#ffc107\",\n//   f: \"#dc3545\"\n// };\n\n// const colorStop = ({ color, value, max }) =>\n//   `#${color} ${(value / max) * 360}deg`;\n\nconst colorConfig = {\n  a: \"#198754\",\n  b: \"#198754\",\n  c: \"#ffc107\",\n  d: \"#dc3545\",\n  f: \"#dc3545\",\n  incomplete: \"#495057\",\n};\n\nconst colorTransitions = ({ grades, total }) => {\n  let current = grades.a;\n  const result = [`${colorConfig.a} ${(current / total) * 360}deg`];\n  [\"b\", \"c\", \"d\", \"f\"].forEach((letter) => {\n    current += grades[letter];\n    result.push(`${colorConfig[letter]} 0 ${(current / total) * 360}deg`);\n  });\n  result.push(`${colorConfig.incomplete} 0`);\n  return result;\n};\n\nfunction GradesPieChart({ grades, total }) {\n  return (\n    <div\n      className=\"shadow border border-2\"\n      style={{\n        display: \"inline-block\",\n        width: \"5em\",\n        height: \"5em\",\n        borderRadius: \"50%\",\n        backgroundImage: `conic-gradient(${colorTransitions({\n          grades,\n          total,\n        }).join(\",\")})`,\n      }}\n    >\n      <table className=\"visually-hidden\">\n        <caption>Distribution of letter grades</caption>\n        <thead>\n          <tr>\n            <th>Grade</th>\n            <th>Percent</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>A/B</td>\n            <td>{Math.floor(((grades.a + grades.b) / total) * 100)} %</td>\n          </tr>\n          <tr>\n            <td>C</td>\n            <td>{Math.floor((grades.c / total) * 100)} %</td>\n          </tr>\n          <tr>\n            <td>D/F</td>\n            <td>{Math.floor(((grades.d + grades.f) / total) * 100)} %</td>\n          </tr>\n          <tr>\n            <td>Incomplete</td>\n            <td>\n              {Math.floor(\n                ((total - Object.values(grades).reduce((a, b) => a + b)) /\n                  total) *\n                  100\n              )}{\" \"}\n              %\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default GradesPieChart;\n","import PropTypes from \"prop-types\";\nimport { classNamesFromArray } from \"../util\";\n\nfunction ProgressBar({ value, min, max }) {\n  const ratio = max === min ? 0 : value / (max - min);\n  const width = `${Math.floor(ratio * 100)}%`;\n  const variant =\n    ratio < 0.7\n      ? \"danger\"\n      : ratio < 0.9\n      ? \"warning\"\n      : ratio < 1\n      ? \"info\"\n      : \"success\";\n  return (\n    <div className=\"progress\" style={{ height: \"0.25em\" }}>\n      <div\n        className={classNamesFromArray([\n          \"progress-bar\",\n          variant && `bg-${variant}`,\n        ])}\n        role=\"progressbar\"\n        style={{ width }}\n        aria-valuenow={value}\n        aria-valuemin={min}\n        aria-valuemax={max}\n      ></div>\n    </div>\n  );\n}\n\nProgressBar.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nProgressBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n};\n\nexport default ProgressBar;\n","import { useEffect } from \"react\";\nimport { useAssignments } from \"../bcs\";\nimport Loader from \"../common/Loader\";\nimport { useDocumentMeta } from \"../util\";\nimport Calendar from \"./Calendar\";\nimport GradesPieChart from \"./GradesPieChart\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst pageTitle = (cohortName) =>\n  cohortName ? `Assignments: ${cohortName}` : \"Assignments\";\n\nfunction Assignments({ cohort }) {\n  useDocumentMeta({ title: pageTitle(cohort.name) });\n  const assignments = useAssignments(cohort.enrollmentId);\n  useEffect(() => assignments.load(), [assignments]);\n\n  if (!assignments.isLoaded) {\n    return <Loader>Loading assignments...</Loader>;\n  }\n  if (assignments.error) {\n    console.error(assignments.error);\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center\">\n        <p className=\"text-center lead\">Unable to load assignments</p>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"mx-auto d-flex flex-column pt-3\"\n      style={{ maxWidth: \"40rem\" }}\n    >\n      {assignments.result?.map((a) => (\n        <div key={a.id} className=\"row my-3 shadow border-1 p-2\">\n          <div className=\"col-auto  pt-1\">\n            <Calendar date={a.dueDate} title=\"Assignment due date\" />\n          </div>\n          <div className=\"col\">\n            <h5>{a.title}</h5>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"mb-1\">\n                  <p className=\"mb-0\">\n                    Submissions ({a.expectedTotal - a.unSubmitted}/\n                    {a.expectedTotal})\n                  </p>\n                  <ProgressBar\n                    value={a.expectedTotal - a.unSubmitted}\n                    max={a.expectedTotal}\n                  />\n                </div>\n                <div className=\"mb-1\">\n                  <p className=\"mb-0\">\n                    {/* submitted by not yet graded homework / total submitted */}\n                    Grading (\n                    {a.expectedTotal === a.unSubmitted\n                      ? \"N/A\"\n                      : `${a.expectedTotal - a.unSubmitted - a.ungraded}/\n                      ${a.expectedTotal - a.unSubmitted}`}\n                    )\n                  </p>\n                  <ProgressBar\n                    value={a.expectedTotal - a.unSubmitted - a.ungraded}\n                    max={a.expectedTotal - a.unSubmitted}\n                  />\n                </div>\n                <div className=\"mb-1\">\n                  <p className=\"mb-0\">\n                    {/* completed for a letter grade / total */}\n                    Completion: {a.expectedTotal - a.incomplete - a.unSubmitted}\n                    /{a.expectedTotal}\n                  </p>\n                  <ProgressBar\n                    value={a.expectedTotal - a.incomplete - a.unSubmitted}\n                    max={a.expectedTotal}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4 d-none d-sm-flex justify-content-center\">\n                <GradesPieChart\n                  grades={a.grades}\n                  incomplete={a.incomplete}\n                  total={a.expectedTotal - a.unSubmitted - a.ungraded}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Assignments;\n","import Assignments from \"./Assignments\";\nexport default Assignments;\n","import { useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router\";\nimport { useCohorts } from \"../bcs\";\nimport Loader from \"../common/Loader\";\nimport Overview from \"../Overview\";\nimport Cohorts from \"./Cohorts\";\nimport SideBar from \"./SideBar\";\nimport Assignments from \"../Assignments\";\n\nfunction Dashboard() {\n  const match = useRouteMatch(\"/:enrollmentId?\");\n  const enrollmentId = parseInt(match.params.enrollmentId);\n  const cohorts = useCohorts();\n  useEffect(() => {\n    cohorts.load();\n  }, [cohorts]);\n\n  const cohort =\n    cohorts.result?.find((c) => c.enrollmentId === enrollmentId) || null;\n\n  return (\n    <div className=\"h-100 w-100 d-flex\">\n      <SideBar cohorts={cohorts.result} currentCohort={cohort} />\n      <div className=\"container-fluid\">\n        {!cohorts.isLoaded ? (\n          <Loader>Loading cohorts...</Loader>\n        ) : cohorts.error ? (\n          <p>Error loading cohorts. {cohorts.error.message}</p>\n        ) : (\n          <Switch>\n            <Route path=\"/:enrollmentId/assignments\">\n              <Assignments cohort={cohort} />\n            </Route>\n            <Route path=\"/:enrollmentId\">\n              <Overview cohort={cohort} />\n            </Route>\n            <Route path=\"/\">\n              <Cohorts\n                cohorts={cohorts.result}\n                pending={cohorts.pending}\n                error={cohorts.error?.message || \"\"}\n                isLoaded={cohorts.isLoaded}\n              />\n            </Route>\n          </Switch>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport * as idb from \"idb-keyval\";\nimport { useBcs } from \"./bcs\";\nimport { useDocumentMeta } from \"./util\";\n\nconst rememberEmail = (email) => idb.set(\"login:email\", email);\nconst clearEmail = () => idb.del(\"login:email\");\nconst getEmail = () => idb.get(\"login:email\");\n\n// Based on https://reactrouter.com/web/example/auth-workflow. The login form\n// will redirect back to the page the use tried to access after a successful\n// login. Falls back to \"/\" if there is no history yet.\nfunction Login() {\n  const history = useHistory();\n  const location = useLocation();\n  const { login, isLoggedIn, pending, error } = useBcs();\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    remember: false,\n    dirty: false,\n  });\n\n  useDocumentMeta({ title: \"Login | Bootcamp Instructor Dashboard\" });\n\n  // Redirect if the user is logged in.\n  useEffect(() => {\n    if (isLoggedIn) {\n      // Get path the user came from (see ProtectedRoute). Fallback to \"/\"\n      const from = { pathname: location.state?.from?.pathname || \"/\" };\n      history.replace(from);\n    }\n  }, [isLoggedIn, history, location]);\n\n  // initialize email from storage\n  useEffect(() => {\n    getEmail().then((email) =>\n      setFormState((prevState) => ({\n        ...prevState,\n        remember: !!email,\n        email: email || \"\",\n      }))\n    );\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormState((prevState) => ({\n      ...prevState,\n      dirty: true,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  const isFormValid = () => {\n    const { email, password, dirty } = formState;\n    return email.trim() && password.trim() && dirty;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password, remember } = formState;\n    const bcsCredentials = {\n      email: email.trim(),\n      password: password.trim(),\n    };\n    setFormState((prevState) => ({ ...prevState, dirty: false }));\n    if (remember) {\n      await rememberEmail(bcsCredentials.email);\n    } else {\n      await clearEmail();\n    }\n    login(bcsCredentials);\n  };\n\n  return (\n    <main\n      style={{ maxWidth: 330 }}\n      className=\"w-100 py-5 mx-auto h-100 d-flex align-items-center\"\n    >\n      <form onSubmit={handleSubmit}>\n        <Heading />\n        <FormControl\n          label=\"Email address\"\n          type=\"email\"\n          controlId=\"email\"\n          style={{\n            marginBottom: -1,\n            borderBottomRightRadius: 0,\n            borderBottomLeftRadius: 0,\n          }}\n          value={formState.email}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <FormControl\n          label=\"Password\"\n          type=\"password\"\n          controlId=\"password\"\n          style={{\n            borderTopRightRadius: 0,\n            borderTopLeftRadius: 0,\n          }}\n          value={formState.password}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <RememberMeControl\n          controlId=\"remember\"\n          checked={formState.remember}\n          onChange={handleInputChange}\n          disabled={pending}\n        />\n        <SubmitButton disabled={!isFormValid() || pending} pending={pending} />\n        <Alert show={error && !formState.dirty}>{error}</Alert>\n      </form>\n    </main>\n  );\n}\n\nfunction Heading() {\n  return (\n    <h1 className=\"h3 mb-3 fw-normal\">\n      Please sign in with your BCS Credentials\n    </h1>\n  );\n}\n\nfunction FormControl({ label, controlId, ...inputProps }) {\n  return (\n    <div className=\"form-floating\">\n      <input\n        name={controlId}\n        id={controlId}\n        className=\"form-control\"\n        {...inputProps}\n      />\n      <label htmlFor={controlId}>{label}</label>\n    </div>\n  );\n}\n\nfunction RememberMeControl({ controlId, ...inputProps }) {\n  return (\n    <div className=\"my-3 text-center\">\n      <label>\n        <input name={controlId} type=\"checkbox\" {...inputProps} /> Remember me\n      </label>\n    </div>\n  );\n}\n\n// Alert uses css transition to grow/shrink on Y axis.\nfunction Alert({ children, show }) {\n  return (\n    <div\n      className=\"mt-3\"\n      style={{\n        maxHeight: show ? 100 : 0,\n        transition: `max-height ease 400ms`,\n        overflow: \"hidden\",\n        height: \"auto\",\n      }}\n    >\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction SubmitButton({ pending, ...btnProps }) {\n  return (\n    <button\n      type=\"submit\"\n      className=\"w-100 btn btn-lg btn-primary\"\n      {...btnProps}\n    >\n      {pending ? <ButtonSpinner>Logging in...</ButtonSpinner> : \"Submit\"}\n    </button>\n  );\n}\n\nfunction ButtonSpinner({ children }) {\n  return (\n    <>\n      <span\n        className=\"spinner-border spinner-border-sm me-3\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n      {children}\n    </>\n  );\n}\n\nexport default Login;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useBcs } from \"../bcs\";\nfunction PrivateRoute({ children, ...rest }) {\n  const { isLoggedIn } = useBcs();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { Link } from \"react-router-dom\";\nimport { useBcs } from \"../bcs\";\n\nfunction TopBar() {\n  const { isLoggedIn, signOut } = useBcs();\n  return (\n    <header className=\"navbar navbar-expand navbar-dark bg-dark\">\n      <Link className=\"navbar-brand px-3\" to=\"/\">\n        Instructor Dashboard\n      </Link>\n      <div className=\"navbar-nav px-3 ms-auto\">\n        <div className=\"nav-item\">\n          {isLoggedIn && (\n            <button className=\"nav-link bg-dark btn\" onClick={signOut}>\n              Sign out\n            </button>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default TopBar;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BcsProvider } from \"./bcs\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./common/PrivateRoute\";\nimport TopBar from \"./common/TopBar\";\n\nfunction App() {\n  return (\n    <BcsProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <TopBar />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Dashboard />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </BcsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}